!function(){"use strict";!function(n){if(!n||"undefined"==typeof window)return;const e=document.createElement("style");e.setAttribute("type","text/css"),e.innerHTML=n,document.head.appendChild(e)}(".chat-panel {\n  position: relative;\n  border-radius: 0.5rem;\n  margin: 1rem auto;\n  background-color: rgb(246, 248, 250);\n  overflow: hidden;\n}\n.chat-panel button {\n  border: 0;\n  background: none;\n  margin: 0;\n  padding: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n.chat-panel .titlebar {\n  text-align: center;\n}\n.chat-panel .titlebar.mac {\n  display: flex;\n  justify-content: center;\n  padding: 0.9rem 1rem;\n  width: 100%;\n}\n.chat-panel .titlebar.mac .title {\n  font-weight: 500;\n  font-size: 0.9rem;\n  line-height: 0.9rem;\n  letter-spacing: 0.5px;\n}\n.chat-panel .titlebar.mac .controls {\n  position: absolute;\n  top: 1rem;\n  left: 1rem;\n  display: grid;\n  gap: 0.6rem;\n  grid-template-columns: repeat(3, 0.8rem);\n}\n.chat-panel .titlebar.mac .controls svg {\n  opacity: 0;\n}\n.chat-panel .titlebar.mac .controls:hover button {\n  transform: scale(1.2);\n}\n.chat-panel .titlebar.mac .controls:hover svg {\n  opacity: 1;\n}\n.chat-panel .titlebar.mac .controls .close {\n  --bgcolor: #ff5f56;\n  --border-color: #e0443e;\n}\n.chat-panel .titlebar.mac .controls .stretch {\n  --bgcolor: #27c93f;\n  --border-color: #1aab29;\n}\n.chat-panel .titlebar.mac .controls .stretch svg {\n  transform: rotate(90deg);\n}\n.chat-panel .titlebar.mac .controls .minimize {\n  --bgcolor: #ffbd2e;\n  --border-color: #dea123;\n}\n.chat-panel .titlebar.mac .controls .circle {\n  width: 0.8rem;\n  height: 0.8rem;\n  border-radius: 50%;\n  background-color: var(--bgcolor);\n  box-shadow: 0 0 0 0.5px var(--border-color);\n  transition: transform 0.1s ease-in;\n}\n.chat-panel .titlebar.windows {\n  display: flex;\n  flex-shrink: 0;\n  width: 100%;\n  height: 28px;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  border-radius: 6px 6px 0 0;\n}\n.chat-panel .titlebar.windows .title {\n  font-size: 0.64em;\n}\n.chat-panel .titlebar.windows .controls {\n  height: 100%;\n  position: absolute;\n  right: 0;\n  display: flex;\n  align-items: center;\n}\n.chat-panel .titlebar.windows .controls svg {\n  width: 12px;\n  height: 100%;\n}\n.chat-panel .titlebar.windows .controls button {\n  height: 100%;\n  padding: 0 18px;\n  transition: all ease-in-out 60ms;\n}\n.chat-panel .titlebar.windows .controls button:hover {\n  background: rgba(136, 136, 136, 0.2);\n}\n.chat-panel .titlebar.windows .controls button[class=close]:hover {\n  background: rgba(255, 0, 0, 0.8);\n}\n.chat-panel .titlebar.windows .controls button[class=close]:hover svg {\n  filter: invert(1);\n}\n.chat-panel .main-area {\n  width: 100%;\n  min-height: auto;\n}\n.chat-panel .main-area .chat-message {\n  position: relative;\n  padding: 1rem;\n  opacity: 0;\n  transform: translate(-10%);\n  transition: transform 0.4s ease-out, opacity 0.4s ease-in;\n}\n.chat-panel .main-area .chat-message.myself {\n  text-align: right;\n  transform: translate(10%);\n}\n.chat-panel .main-area .chat-message.myself .message-box {\n  margin-left: 0;\n  margin-right: 0.5rem;\n}\n.chat-panel .main-area .chat-message.myself .nickname {\n  text-align: right;\n}\n.chat-panel .main-area .chat-message.show {\n  opacity: 1;\n  transform: translate(0);\n}\n.chat-panel .main-area .chat-message .avatar {\n  width: 2.5rem;\n  height: 2.5rem;\n  overflow: hidden;\n  border-radius: 50%;\n  line-height: 2.5rem;\n  color: #fff;\n  text-align: center;\n  display: inline-block;\n}\n.chat-panel .main-area .chat-message .avatar img {\n  display: inline-flex;\n  line-height: 0;\n  justify-content: center;\n  align-items: center;\n  color: #fff;\n}\n.chat-panel .main-area .chat-message .message-box {\n  display: inline-block;\n  margin-left: 0.5rem;\n  max-width: 90%;\n  vertical-align: top;\n}\n.chat-panel .main-area .chat-message .message-box .nickname {\n  font-size: 0.8rem;\n  color: gray;\n}\n.chat-panel .main-area .chat-message .message-box .message {\n  position: relative;\n  font-size: 0.9rem;\n  border-radius: 0.5rem;\n  background-color: #fff;\n  word-break: break-all;\n  padding: 0.6rem 0.7rem;\n  margin-top: 0.2rem;\n  box-shadow: rgba(0, 0, 0, 0) 0px 0px 0px 0px, rgba(0, 0, 0, 0) 0px 0px 0px 0px, rgba(0, 0, 0, 0.05) 0px 1px 2px 0px;\n}");const n="chat-panel",e="chat-message",t=/(Mac|iPhone|iPod|iPad)/i.test(navigator.platform),a={chatPanelMarkup:/[\r\n]*(\s*)(<!-+\s+chat:\s*?start\s+-+>)[\r\n]+([\s|\S]*?)[\r\n\s]+(<!-+\s+chat:\s*?end\s+-+>)/m,panelTitleMarkup:/[\r\n]*(\s*)<!-+\s+title:\s*(.*)\s+-+>/m,chatCommentMarkup:/[\r\n]*(\s*)#{1,6}\s*[*_]{2}\s*(.*[^\s])\s*[*_]{2}[\r\n]+([\s\S]*?)(?=#{1,6}\s*[*_]{2}|<!-+\s+chat:\s*?end\s+-+>)/},s={os:t?"mac":"windows",title:"聊天记录",users:[],myself:null,animation:50},r={mac:{close:'\n      <svg width="7" height="7" fill="none" xmlns="http://www.w3.org/2000/svg">\n        <path stroke="#000" stroke-width="1.2" stroke-linecap="round" d="M1.182 5.99L5.99 1.182m0 4.95L1.182 1.323">\n        </path>\n      </svg>\n    ',minimize:'\n      <svg width="6" height="1" fill="none" xmlns="http://www.w3.org/2000/svg">\n        <path stroke="#000" stroke-width="2" stroke-linecap="round" d="M.61.703h5.8"></path>\n      </svg>\n    ',stretch:'\n      <svg\n        viewBox="0 0 13 13"\n        xmlns="http://www.w3.org/2000/svg"\n        fill-rule="evenodd"\n        clip-rule="evenodd"\n        stroke-linejoin="round"\n        stroke-miterlimit="2"\n      >\n        <path d="M4.871 3.553L9.37 8.098V3.553H4.871zm3.134 5.769L3.506 4.777v4.545h4.499z"></path>\n        <circle cx="6.438" cy="6.438" r="6.438" fill="none"></circle>\n      </svg>\n    '},windows:{close:'\n      <svg\n        version="1.0"\n        xmlns="http://www.w3.org/2000/svg"\n        width="512.000000pt"\n        height="512.000000pt"\n        viewBox="0 0 512.000000 512.000000"\n        preserveAspectRatio="xMidYMid meet"\n      >\n        <g transform="translate(0.000000,512.000000) scale(0.100000,-0.100000)" fill="#000000" stroke="none">\n          <path\n            d="M900 4272 c-46 -23 -75 -79 -65 -130 6 -33 98 -129 778 -809 l772 -773 -772 -772 c-849 -851 -807 -802 -767 -885 25 -51 77 -78 129 -69 36 7 110 78 813 779 l772 772 773 -772 c702 -701 776 -772 812 -779 52 -9 104 18 129 69 40 83 82 34 -767 885 l-772 772 772 773 c680 680 772 776 778 809 15 82 -61 158 -143 143 -33 -6 -129 -98 -810 -778 l-772 -772 -768 767 c-428 428 -779 772 -795 777 -39 15 -56 14 -97 -7z" />\n        </g>\n      </svg>\n    ',minimize:'\n      <svg\n        version="1.0"\n        xmlns="http://www.w3.org/2000/svg"\n        width="512.000000pt"\n        height="512.000000pt"\n        viewBox="0 0 512.000000 512.000000"\n        preserveAspectRatio="xMidYMid meet"\n      >\n        <g transform="translate(0.000000,512.000000) scale(0.100000,-0.100000)" fill="#000000" stroke="none">\n          <path\n            d="M724 2751 c-105 -64 -109 -209 -8 -272 l39 -24 1805 0 1805 0 35 22 c101 63 104 194 6 267 l-27 21 -1812 3 c-1761 2 -1813 1 -1843 -17z" />\n        </g>\n      </svg>\n    ',stretch:'\n      <svg\n        version="1.0"\n        xmlns="http://www.w3.org/2000/svg"\n        width="512.000000pt"\n        height="512.000000pt"\n        viewBox="0 0 512.000000 512.000000"\n        preserveAspectRatio="xMidYMid meet"\n      >\n        <g transform="translate(0.000000,512.000000) scale(0.100000,-0.100000)" fill="#000000" stroke="none">\n          <path\n            d="M1100 4464 c-218 -47 -399 -229 -445 -449 -22 -105 -22 -2805 0 -2910 47 -222 228 -403 450 -450 105 -22 2805 -22 2910 0 222 47 403 228 450 450 22 105 22 2805 0 2910 -47 222 -228 403 -450 450 -102 21 -2815 21 -2915 -1z m2870 -315 c58 -18 130 -78 159 -134 l26 -50 3 -1385 c2 -1001 0 -1396 -9 -1426 -16 -60 -76 -133 -134 -163 l-50 -26 -1405 0 -1405 0 -50 26 c-58 30 -118 103 -134 163 -9 30 -11 425 -9 1426 l3 1385 26 50 c28 53 100 116 153 133 46 15 2776 16 2826 1z" />\n        </g>\n      </svg>\n    '}};function i(n){let e=s.os,t="";switch(e){case"mac":t=`\n        <button class="circle close">${r[e].close}</button>\n        <button class="circle minimize">${r[e].minimize}</button>\n        <button class="circle stretch"> ${r[e].stretch}</button>\n      `;break;case"windows":t=`\n        <button class="minimize">${r[e].minimize}</button>\n        <button class="stretch"> ${r[e].stretch}</button>\n        <button class="close">${r[e].close}</button>\n      `;break;default:console.error(`os "${e}" is invalid argument`)}return`\n    <header class="titlebar ${e}">\n      <div class="controls">${t}</div>\n      <span class="title">${n}</span>\n    </header>\n  `}function o(n){return`<div class="avatar" style="background-color: ${function(n){let e=0,t="#";for(let t=0;t<n.length;t++)e=n.charCodeAt(t)+((e<<5)-e);for(let n=0;n<3;n++)t+=("00"+(e>>8*n&255).toString(16)).substr(-2);return t}(n)};">${n.substring(0,1)}</div>`}window&&(window.$docsify=window.$docsify??{},window.$docsify.chat=window.$docsify.chat??{},Object.keys(window.$docsify.chat).forEach((n=>{Object.prototype.hasOwnProperty.call(s,n)&&(s[n]=window.$docsify.chat[n])})),window.$docsify.chat.version="0.2.1",window.$docsify.plugins=[].concat((function(t,r){let l=!1;t.beforeEach((e=>(l=a.chatPanelMarkup.test(e),l&&(e=function(e,t){let r,l;for(;r=a.chatPanelMarkup.exec(e);){let t=r[0],c=s.title,h="",m="";const d=a.panelTitleMarkup.test(t),p=a.chatCommentMarkup.test(t),g=r[2],w=r[4];d&&(c=a.panelTitleMarkup.exec(t)[2],t=t.replace(a.panelTitleMarkup,""));const f=i(c);if(p)for(h=`<section class="${n}">${f}<main class="main-area">`,m="</main></section>";l=a.chatCommentMarkup.exec(t);){const n=l[2],e=l[3].trim(),a=s.users.filter((e=>e.nickname===n))[0]??{},r=s.myself===n,i=a.avatar?`<div class="avatar"><img src="${a.avatar}"></div>`:o(n),c=r?["$2","$1"]:["$1","$2"],h=`\n          <div class="chat-message ${r?"myself":""}">\n            $1\n            <div class="message-box">\n              <div class="nickname">${n}</div>\n              <div class="message">${e}</div>\n            </div>\n            $2\n          </div>\n        `.replace(c[0],i).replace(c[1],"");t=t.replace(l[0],h)}t=t.replace(g,h),t=t.replace(w,m),e=e.replace(r[0],t)}return e}(e)),e))),t.doneEach((()=>{const t=document.getElementsByClassName(n),a=new IntersectionObserver((n=>{n.forEach((n=>{const t=n.target.getElementsByClassName(e);for(let e=0;e<t.length;e++){const a=t[e];n.isIntersecting?setTimeout((()=>a.classList.add("show")),e*s.animation):a.classList.remove("show")}}))}));for(const n of t)a.observe(n)}))}),window.$docsify.plugins??[]))}();
